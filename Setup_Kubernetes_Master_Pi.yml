---
- name: Install Docker
  hosts: 192.168.1.80
  become: true

  handlers:
    - name: docker status
      service: name=docker state=started

  tasks:

    - name: Install prerequisite packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - python3-pip
          - python3-setuptools
          - aptitude

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages: #packages get redefined here
        - docker.io
      notify:
        - docker status

    - name: Change default cgroups driver
      shell: |
        cat > /etc/docker/daemon.json << EOF
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }
        EOF
      args:
        chdir: /etc/docker
        creates: daemon.json
        executable: /bin/bash

    - name: Enable cgroups limit support
      lineinfile:
        path: /boot/firmware/cmdline.txt
        state: present
        backrefs: yes
        regexp: ^(.*quiet splash).*$
        line: '\g<1> cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1/'  

    - name: Reboot to apply configuration
      reboot:   

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add Kubernetes GPG apt Key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes Binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        - kubelet
        - kubeadm
        - kubectl

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip=192.168.1.88

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
    
    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="192.168.1.88" --apiserver-cert-extra-sans="192.168.1.88"  --node-name k8s-master --pod-network-cidr=192.168.1.0/24

    - name: Install calico pod network
      become: false
      command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml
      
    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

    

      

    